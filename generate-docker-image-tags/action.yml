name: Generate Docker Image Tags
description: Generate a list of Docker image tags for the current workflow.
# The returned tags depend on the branch the workflow runs on:
#    * If the current branch is a development branch (i.e., not master or main),
#      the image will receive "temporary" tags (prefixed with "temp."). It will
#      be tagged with both the commit hash and the branch name. For example, a
#      commit on branch "feature-branch" with hash "425840e" will receive the
#      following tags: {temp.feature-branch, temp.425840e}.
#
#    * If the current branch is master or main, the image will receive the same
#      tags (branch and commit hash) but without the "temp." prefix. It will also
#      receive the special "latest" tag that Docker uses by default. For example,
#      a commit on branch "main" with hash "425840e" will receive the following
#      tags: {latest, main, 425840e}

inputs:
  shortcut-api-token:
    description: Shortcut API token for fetching Story IDs related to a PR.
    required: false
  prefix:
    description: |
      The prefix for tagging commits that are not yet merged to main/master.
      For example: a PR from some-branch would receive the tags <prefix>.some-branch, <prefix>.<COMMIT_SHA>.
    required: false
    default: temp

outputs:
  tags:
    description: Comma-separated list of tags.
    value: ${{ steps.get-tags.outputs.tags }}

runs:
  using: composite
  steps:
    - id: get-branch
      shell: bash
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" ]
        then
          BRANCH=$GITHUB_HEAD_REF
        elif [ "$GITHUB_EVENT_NAME" == "push" ] || [ "$GITHUB_EVENT_NAME" == "release" ]
        then
          BRANCH=${GITHUB_REF##*/}
        else
          printf 'Cannot determine tags: Workflow must be triggered by "push", "pull_request", or "release" event.' && exit 1
        fi

        echo "branch=$BRANCH" >> $GITHUB_OUTPUT

    - id: get-tags
      shell: bash
      run: |
        BRANCH=${{ steps.get-branch.outputs.branch }}
        COMMIT_SHA=${GITHUB_SHA:0:7}

        if [ "$BRANCH" == "main" ] || [ "$BRANCH" == "master" ]
        then
          TAGS="latest,$BRANCH,$COMMIT_SHA"
        else
          SLASHLESS_BRANCH=`echo $BRANCH | tr / -`
          TAGS="${{ inputs.prefix }}.$SLASHLESS_BRANCH,${{ inputs.prefix }}.$COMMIT_SHA"
        fi

        if [ "$GITHUB_EVENT_NAME" == "pull_request" ]
        then
          PR_NUMBER="${{ github.event.number }}"
        elif [ "$GITHUB_EVENT_NAME" == "push" ]
        then
          # Workflow was triggered by a "push" event.
          PR_NUMBER=$( \
            (echo "${{ github.event.head_commit.message }}" \
            | grep -o "\(#[0-9]\+\)" || true) \
            | sed "s/[#()]//g" \
          )
        else
          PR_NUMBER=""
        fi

        # Add additional tags for each Story ID associated with this PR.
        if [ ! -z "$PR_NUMBER" ] && [ ! -z "${{ inputs.shortcut-api-token }}" ]; then
          url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/pull/$PR_NUMBER"

          ids=$(
            curl --silent -X GET \
            -H "Content-Type: application/json" \
            -H "Shortcut-Token: ${{ inputs.shortcut-api-token }}" \
            -d "{ \"page_size\": 20, \"query\": \"is:story and pr:$url\" }" \
            -L "https://api.app.shortcut.com/api/v3/search" \
            | jq ".stories.data[].id"
          )

          while read -r id; do
            if [ ! -z "$id" ]; then
              TAGS="$TAGS,sc-$id"
            fi
          done <<< "$ids"
        fi

        echo "tags=$TAGS" >> $GITHUB_OUTPUT
