name: Push files to an S3 bucket destination and invalidate the cloudfront cache
description: |
  This action will push files to a destination S3 bucket (or a folder within a bucket) and invalidates the cloudfront cache.
  The action also removes any stale files from the bucket. The action can also delete files/folders from the bucket.

inputs:
  s3-bucket:
    description: The name of the S3 bucket
    required: true
  pull-request-number:
    description: The Pull request number in a <PR-123> format. This will also be the name of the folder to push contents to/delete on S3.
    required: false
  cloudfront-distribution-id:
    description: The cloudfront distribution ID for the app
    required: false
  # aws-region:
  #   description: The aws region used by the IAM machine user
  #   required: true
  # aws-access-key-id:
  #   description: The aws access key id for the IAM machine user
  #   required:  true
  # aws-secret-access-key:
  #   description: The aws secret access key for the IAM machine user
  #   required:  true
    
  # pr-activity-type:
  #   description: The type of activity for the pull request. Common activity types are a pull request being opened or merged. Full list of activity types can be found here - https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
  #   required: true

runs:
  using: composite
  steps:
    - name: On Pull Request creation push the built files to a new folder
      shell: bash
      if: github.event_name == 'pull_request' && github.event.action == 'opened'
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        pull-request-number: github.event.number
      run: |
        echo "1"
   #     echo $GITHUB_CONTEXT
      # run: echo aws s3 sync docs-build/ s3://${{ inputs.s3-bucket }}/PR-$pull-request-number/

    - name: On Pull Request update push the changed files to the existing folder
      shell: bash
      if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        pull-request-number: github.event.number
      run: |
        echo "2"
  #      echo $GITHUB_CONTEXT
      # run: |
      #   echo aws s3 sync docs-build/ s3://${{ inputs.s3-bucket }}/PR-$pull-request-number/ --delete
      #   echo aws cloudfront create-invalidation --distribution-id ${{ inputs.cloudfront-distribution-id }} --paths "/PR-$pull-request-number/*"
      
    - name: Delete the folder on S3 when a PR is closed without merging
      shell: bash
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == false
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        pull-request-number: github.event.number
      run: |
        echo "3"
 #       echo $GITHUB_CONTEXT
      # run: echo aws s3 rm s3://${{ inputs.s3-bucket }}/PR-$pull-request-number/ --recursive
      
    - name: When a PR is merged to main update the root folder of the S3 bucket
      shell: bash
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.base_ref == 'main'
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        pull-request-number: github.event.number
      run: |
        echo "4"
#        echo $GITHUB_CONTEXT
      # run: |
        # echo aws s3 sync docs-build/ s3://${{ inputs.s3-bucket }}/ --delete --exclude "PR-[0-9]*"
        # echo aws cloudfront create-invalidation --distribution-id ${{ inputs.cloudfront-distribution-id }} --paths "/*"
