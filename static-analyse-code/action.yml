name: Analyse Source Code for Security Vulnerabilities
description: |
  This action leverages PyCQA/bandit and semgrep/semgrep to analyse the source code of a repository for security vulnerabilities.

inputs:
  github-repository:
    description: 'The GitHub Repository to scan'
    required: true
  repository-ref:
    description: 'The branch or tag to scan'
    required: true
  scan_directory:
    description: 'The directory to scan'
    required: false
    default: './'
  enable-bandit-scan:
    description: 'Enable Bandit Scan'
    required: false
    default: 'true'
  enable-semgrep-scan:
    description: 'Enable Semgrep Scan'
    required: false
    default: 'true'
  bandit-config-file:
    description: 'Localtion of Bandit Config File within the repository that is cloned'
    required: false
    default: '.bandit'
  semgrep-config-file:
    description: 'Semgrep Config File'
    required: false
    default: '.semgrep.yml'
  bandit-output-format:
    description: 'Bandit Output Format'
    required: false
    default: 'screen'
  bandit-output-file:
    description: 'Bandit Output File'
    required: false
    default: 'bandit-output.txt'
  bandit-print-to-screen:
    description: If `bandit-output-format`

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        repository: ${{ inputs.github-repository }}
        ref: ${{ inputs.repository-ref }}
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install Bandit
      if: inputs.enable-bandit-scan == 'true'
      shell: bash
      run: pip install 'bandit[sarif,toml]'
    
    - name: Install Semgrep
      if: inputs.enable-semgrep-scan == 'true'
      shell: bash
      run: pip install semgrep
    
    - name: Bandit Args
      id: bandit-args
      if: inputs.enable-bandit-scan == 'true'
      uses: actions/github-script@v7
      with:
        result-encoding: string
        script: |
          const config_file = '${{ inputs.bandit-config-file }}';
          const output_format = '${{ inputs.bandit-output-format }}';
          const output_file = '${{ inputs.bandit-output-file }}';
          
          let args = '';
          if (config_file) {
            args += `-c ${config_file} `;
          }
          if (output_format) {
            args += `-f ${output_format} `;
          }
          if (output_file && output_format !== 'screen') {
            args += `-o ${output_file} `;
          }
      
      