name: lint
description: |
  Run formatters/linters to OG specifications

runs:
  using: "composite"
  steps:
    - name: Install dependencies
      shell: bash
      run: | 
          pip install black isort docformatter flake8
          # black ./rpdaq/ ./tests/
          # flake8 --ignore=E203,E501,W503 ./rpdaq/ ./tests/

    - name: Run the main logic
      shell: python
      run: |
          import os
          import subprocess
          from pathlib import Path

          ignore_files = set()

          if (ignore_file := Path("./.lintignore")).is_file():
            ignore_paths = ignore_file.read_text().split()
            for path in ignore_paths:
              path = Path(path)
              if path.is_dir():
                ignore_files.update(map(Path.resolve, path.rglob("*")))
              else:
                ignore_files.update([path.resolve()])

          edited_py_files = {
            _file
            for file in subprocess.run(
              f"git diff origin/${{ github.base_ref }} --diff-filter=MAC --name-only",
              shell=True,
              stdout=subprocess.PIPE,
              encoding="utf-8",
            ).stdout.split()
            if (_file := Path(file).resolve()).suffix == ".py"
          }

          files_to_format = edited_py_files - ignore_files

          if files_to_format := " ".join(map(str, files_to_format)):
            try:
              print("Running black...", flush=True)
              subprocess.run(f"black {files_to_format}", shell=True, check=True)
              print("Running isort...", flush=True)
              subprocess.run(f"isort --profile=black {files_to_format}", shell=True)
              print("Running docformatter", flush=True)
              if (
                subprocess.run(
                  f"docformatter --recursive --in-place --wrap-summaries 88 --wrap-descriptions 88 {files_to_format}",
                  shell=True,
                ).returncode
                == 3
              ):
                print("Docformatter raised status 3", flush=True)
              print("Running flake8", flush=True)
              subprocess.run(
                f"flake8 --ignore=E203,E501,W503 {files_to_format}", shell=True, check=True
              )
            finally:
              print("Ling action finished!", flush=True)
